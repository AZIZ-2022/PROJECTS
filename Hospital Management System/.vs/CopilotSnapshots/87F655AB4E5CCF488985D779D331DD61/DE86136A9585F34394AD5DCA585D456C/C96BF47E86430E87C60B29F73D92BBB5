@model WebApplicationDocLab.Models.Prescription

@{
    ViewBag.Title = "Create Prescription";
    Layout = "~/Views/_LayoutPageDoctor.cshtml";
}

<style>
    /* ... (existing styles remain the same) ... */
    .search-results {
        position: absolute;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
        background: white;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        display: none;
    }

    .search-item {
        padding: 8px 12px;
        cursor: pointer;
    }

        .search-item:hover {
            background-color: #f8f9fa;
        }
</style>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card prescription-card">
                <div class="card-header py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0"><i class="fas fa-prescription me-2"></i>Create New Prescription</h3>
                        <a href="@Url.Action("PatientDetails", new { id = Model.PatientId })" class="btn btn-light">
                            <i class="fas fa-arrow-left me-1"></i> Back to Patient
                        </a>
                    </div>
                </div>

                <div class="card-body">
                    @using (Html.BeginForm("CreatePrescription", "Doctor", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", id = "prescriptionForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.DoctorId)
                        @Html.HiddenFor(model => model.PatientId)
                        @Html.HiddenFor(model => model.PrescriptionDate)
                        @Html.Hidden("medicineData", "", new { id = "medicineData" }) <!-- Hidden field for medicine data -->

                        <!-- Patient Information -->
                        <div class="patient-info-card">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label text-muted small mb-1">Patient</label>
                                    <div class="fw-bold fs-5">@ViewBag.PatientName</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label text-muted small mb-1">Date</label>
                                    <div class="fw-bold fs-5">@DateTime.Now.ToString("MMM dd, yyyy")</div>
                                </div>
                            </div>
                        </div>

                        <!-- Medicines Section -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="mb-0"><i class="fas fa-pills me-2"></i>Medicines</h5>
                                <button type="button" id="addMedicineBtn" class="btn btn-outline-primary">
                                    <i class="fas fa-plus me-1"></i> Add Medicine
                                </button>
                            </div>

                            <div class="medicine-header row gx-2">
                                <div class="col-md-5">Medicine Name</div>
                                <div class="col-md-3">Dosage</div>
                                <div class="col-md-3">Duration</div>
                                <div class="col-md-1"></div>
                            </div>

                            <div id="medicineContainer">
                                <!-- Medicine rows will be added here dynamically -->
                            </div>
                        </div>

                        <!-- Notes Section -->
                        <div class="mb-4">
                            <h5 class="mb-3"><i class="fas fa-notes-medical me-2"></i>Additional Notes</h5>
                            @Html.TextAreaFor(model => model.Notes, new
                            {
                                @class = "form-control",
                                rows = 4,
                                placeholder = "Enter additional instructions, diagnosis, observations, etc...",
                                id = "prescriptionNotes"
                            })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-end gap-3 pt-3">
                            <a href="@Url.Action("PatientDetails", new { id = Model.PatientId })" class="btn btn-lg btn-secondary px-4">
                                <i class="fas fa-times me-2"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-lg btn-primary px-4" id="btnSubmit">
                                <i class="fas fa-save me-2"></i> Save Prescription
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let medicineCounter = 0;
            const medicineEntries = [];

            // Function to add a new medicine row
            function addMedicineRow(medicine = null) {
                const id = medicine ? medicine.Id : '';
                const name = medicine ? medicine.MedicineName : '';

                const row = `
                    <div class="medicine-row row gx-2" data-id="${id}">
                        <div class="col-md-5 mb-2 mb-md-0 position-relative">
                            <input type="text" class="form-control medicine-name"
                                   placeholder="Search medicine..."
                                   value="${name}"
                                   required
                                   autocomplete="off">
                            <div class="search-results"></div>
                            <div class="invalid-feedback">Please select a medicine</div>
                        </div>
                        <div class="col-md-3 mb-2 mb-md-0">
                            <input type="text" class="form-control medicine-dosage" placeholder="e.g., 500mg" required>
                            <div class="invalid-feedback">Please enter dosage</div>
                        </div>
                        <div class="col-md-3 mb-2 mb-md-0">
                            <input type="text" class="form-control medicine-duration" placeholder="e.g., 7 days" required>
                            <div class="invalid-feedback">Please enter duration</div>
                        </div>
                        <div class="col-md-1 mb-2 mb-md-0 d-flex align-items-center">
                            <button type="button" class="btn btn-outline-danger remove-medicine">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>`;

                $('#medicineContainer').append(row);
                medicineCounter++;
            }

            // Add first medicine row
            addMedicineRow();

            // Add medicine button
            $('#addMedicineBtn').click(function () {
                addMedicineRow();
            });

            // Remove medicine row
            $(document).on('click', '.remove-medicine', function () {
                if ($('.medicine-row').length > 1) {
                    $(this).closest('.medicine-row').remove();
                } else {
                    // Reset the first row if it's the only one
                    $('.medicine-row:first').find('input').val('');
                }
            });

            // Medicine search
            $(document).on('input', '.medicine-name', function() {
                const searchTerm = $(this).val().trim();
                const $resultsContainer = $(this).siblings('.search-results');

                if (searchTerm.length < 2) {
                    $resultsContainer.hide();
                    return;
                }

                $.get('@Url.Action("SearchMedicines", "Doctor")', { term: searchTerm }, function(data) {
                    if (data.length > 0) {
                        let resultsHtml = '';
                        data.forEach(function(medicine) {
                            resultsHtml += `<div class="search-item" data-id="${medicine.Id}" data-name="${medicine.MedicineName}">
                                <strong>${medicine.MedicineName}</strong><br>
                                <small>${medicine.GenericName} - ${medicine.BrandName}</small>
                            </div>`;
                        });
                        $resultsContainer.html(resultsHtml).show();
                    } else {
                        $resultsContainer.html('<div class="search-item">No medicines found</div>').show();
                    }
                });
            });

            // Select medicine from search results
            $(document).on('click', '.search-item', function() {
                const medicineId = $(this).data('id');
                const medicineName = $(this).data('name');

                const $row = $(this).closest('.medicine-row');
                $row.find('.medicine-name').val(medicineName);
                $row.attr('data-id', medicineId);
                $(this).closest('.search-results').hide();
            });

            // Form submission
            $('#prescriptionForm').on('submit', function (e) {
                e.preventDefault();

                // Validate form
                let isValid = true;
                const medicines = [];

                $('.medicine-row').each(function() {
                    const $row = $(this);
                    const medicineId = $row.data('id');
                    const name = $row.find('.medicine-name').val().trim();
                    const dosage = $row.find('.medicine-dosage').val().trim();
                    const duration = $row.find('.medicine-duration').val().trim();

                    // Validation
                    if (!medicineId || !name) {
                        $row.find('.medicine-name').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $row.find('.medicine-name').removeClass('is-invalid');
                    }

                    if (!dosage) {
                        $row.find('.medicine-dosage').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $row.find('.medicine-dosage').removeClass('is-invalid');
                    }

                    if (!duration) {
                        $row.find('.medicine-duration').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $row.find('.medicine-duration').removeClass('is-invalid');
                    }

                    // Collect medicine data
                    if (medicineId && dosage && duration) {
                        medicines.push({
                            MedicineId: medicineId,
                            Dosage: dosage,
                            Duration: duration
                        });
                    }
                });

                if (!isValid) {
                    return false;
                }

                // Set medicine data in hidden field
                $('#medicineData').val(JSON.stringify(medicines));

                // Submit form
                this.submit();
            });
        });
    </script>
}